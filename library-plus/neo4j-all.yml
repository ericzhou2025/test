---
apiVersion: apps/v1 ## Kubernetes API Version
kind: Deployment ## Type of resource
metadata:
 labels:
   app: neo4j-db ## Labels given by user
 name: neo4j-db ## Name given to the <kind> resource
 namespace: it-ar ## Namespace in which to deploy the resource
spec:
 replicas: 1
 selector:
   matchLabels: ## Should be same as spec.template.labels
     app: neo4j-db
 template:
   metadata:
     labels:
       app: neo4j-db
   spec:
     hostAliases:
     - ip: "99.83.254.181"
       hostnames:
       - "api.nlp.dev.uptimize.merckgroup.com"
     - ip: "75.2.0.186"
       hostnames:
       - "api.nlp.dev.uptimize.merckgroup.com"
     containers:
     - image: "340752819914.dkr.ecr.eu-central-1.amazonaws.com/it_ar_k8s/neo4j:5.18-enterprise"
       name: neo4j-db
       securityContext:
         runAsUser: 7474
         runAsGroup: 7474
       #resources:
       #  requests:
       #    memory: "500Mi"
       #    cpu: "250m"
       #  limits:
       #    memory: "600Mi"
       #    cpu: "500m"
       env: ## Enserver.config.strict_validation.enabledv variables to pass
          - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
            value: "yes"
          - name: NEO4J_server_config_strict__validation_enabled
            value: "false"
         #- name: NEO4J_dbms_security_procedures_whitelist
           #value: "gds.*,algo.*,apoc.*,spatial.*"
          - name: NEO4J_PASSWORD
            value: "Merck@2024"
         #- name: NEO4J_dbms_directories_plugins
           #value: "plugins"
       ports: ## Ports to map
           - containerPort: 7474
             name: http
           - containerPort: 7687
             name: bolt
           - containerPort: 7473
             name: https
       #lifecycle:
       #   postStart:
       #      exec:
       #        command: #["/var/lib/neo4j/bin/neo4j-admin","
       #        set-initial-password ellischen"]
       #          - "/bin/sh"
       #          - "-c"
       #          - |
       #            rm -f /var/lib/neo4j/data/dbms/auth
       #            rm -f /var/lib/neo4j/data/dbms/auth.ini
       #            /var/lib/neo4j/bin/neo4j-admin set-initial-password ellischen
       volumeMounts: ## Volumes to mount
           - name: neo4j-data
             mountPath: "/var/lib/neo4j/data"
           - name: neo4j-conf
             mountPath: "/var/lib/neo4j/conf"
           - name: neo4j-plugins
             mountPath: "/var/lib/neo4j/plugins"

     volumes:
         - name: neo4j-data
           persistentVolumeClaim:
             claimName: neo4j-data
         - name: neo4j-conf
           persistentVolumeClaim:
             claimName: neo4j-conf
         - name: neo4j-plugins
           persistentVolumeClaim:
             claimName: neo4j-plugins

---
apiVersion: v1
kind: Service
metadata:
 name: neo4j-db-1
 namespace: it-ar
 annotations:
  service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  service.beta.kubernetes.io/aws-load-balancer-internal: "true"
  service.beta.kubernetes.io/aws-load-balancer-attributes: |

      load_balancing.cross_zone.enabled=true
 labels:
  service: neo4j-db-1
spec:
 type: LoadBalancer

 selector:
   app: neo4j-db
 ports:
   - port: 7474
     name: http
     targetPort: 7474
   - port: 7473
     name: https
     targetPort: 7473
   - port: 7687
     name: bolt
     targetPort: 7687
---
---
apiVersion: v1
kind: Service
metadata:
 name: neo4j-db-2
 namespace: it-ar
 labels:
   service: neo4j-db-2
spec:
 type: ClusterIP
 selector:
   app: neo4j-db
 ports:
   - port: 7474
     name: http
     targetPort: 7474
   - port: 7473
     name: https
     targetPort: 7473
   - port: 7687
     name: bolt
     targetPort: 7687
